Stangely, in 2.8 version there is no consistant method
llvm::Pass::print(std::ostream &, Module * M), so Analysis pass 
library would fail it's dynamic linkage and refused to be
loaded into opt. So far this method is to be inserted in llvm::Pass 
class, nevertheless it's declaration is closed with it's descendants

BranchMarkup is probably required to pypeline due to functional 
"update_value_for_true_branch" symbol is required in 
as::visitCallInst, although can be avoided. Check out.
Proposed to be changed to "updateValueForTrueBranch"
